#home = ENV['userprofile']


SIZE_DISK2 = 3
SIZE_DISK3 = 7


MACHINES = {

    :ubuntuserver => {
        :box_name => "generic/ubuntu1804",
        :box_version => "1.0",
        :ip_addr => '192.168.0.40',   #Your ip here
        :disks => {
            :sata1 => {
                :dfile => './sata1.vdi',
                :size => SIZE_DISK2 * 1024,
                :port => 2
            },
            :sata2 => {
                :dfile => './sata2.vdi',
                :size => SIZE_DISK3 * 1024, #Megabytes
                :port => 3
            }
       	}
    },

}


Vagrant.configure("2") do |config|

   #boxname (key) = :ubuntulinux, boxconfig (value) = {...}  
    MACHINES.each do |boxname, boxconfig|
        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s 

            box.vm.network "public_network", ip: boxconfig[:ip_addr]

            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "1024"] 
                vb.gui = false
                vb.cpus = 2
               
               #----Check: If SATA Controller doesn't exist - create its   
                value = boxconfig[:disks].values[0]

                unless File.exist?(value[:dfile])
                    vb.customize ['storagectl', :id, '--name', 'SATA Controller', '--add', 'sata' ]     
                end
                #------------------------------------

                boxconfig[:disks].each do |dname, dconf|
                              
                    unless File.exist?(dconf[:dfile])
                        #vb.customize ['storagectl', :id, '--name', 'SATA Controller', '--add', 'sata' ]     
                        vb.customize [ 'createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size] ]
                    end

                    vb.customize [ 'storageattach', :id, '--storagectl', 'SATA Controller', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile] ]
                end
            end

            box.vm.synced_folder ".", "/vagrant", type: "rsync", rsync__exclude: ['./*.vdi'] 
            
            box.vm.provision "shell", :path => "./bootstrap/partition.sh"
            box.vm.provision "shell", :path => "./bootstrap/format.sh"
        end

    end
end
